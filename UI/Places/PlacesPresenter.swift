//
//  PlacesPresenter.swift
//  Places
//
//  Created Sebastian Cancinos on 22/03/2020.
//  Copyright © 2020 sebacancinos. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PlacesPresenter: PlacesPresenterProtocol {

    weak private var view: PlacesViewProtocol?
    var interactor: PlacesInteractorInputProtocol?
    private let router: PlacesWireframeProtocol

    init(interface: PlacesViewProtocol, interactor: PlacesInteractorInputProtocol?, router: PlacesWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    func ready() {
        interactor?.loadLocations()
    }

    func refresh() {
        interactor?.loadLocations()
    }

    func filter(by type: LocationType) {
        interactor?.loadLocations(by: type)
    }

    func select(_ location: Location) {
        interactor?.loadDetails(for: location)
    }

    func presentDetails(for location: Location) {
        router.show(location)
    }

    func infiniteScroll() {
        interactor?.loadNextLocations()
    }
}

extension PlacesPresenter: PlacesInteractorOutputProtocol {
    func present(locations: [Location]) {
        view?.update(locations: locations)
    }

    func present(error: Error) {
        view?.show(error: error)
    }
}
